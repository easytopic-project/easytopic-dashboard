version: "3.3"
services:
  react-front:
    build: 
      context: ../easytopic-dashboard-react/
      network: "host"
    image: maxjf1/easytopic-dashboard-react:latest
    command: npm start
    volumes:
      - ../easytopic-dashboard-react/:/app
    depends_on:
      - dashboard
    ports:
      - 3010:3000
    restart: unless-stopped
  dashboard:
    build: 
      context: .
      network: "host"
    image: maxjf1/easytopic-dashboard-api:latest
    command: npm run dev
    volumes:
      - ./:/app
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - rabbitmq
    ports:
      - 8080:3000
    environment:
      QUEUE_SERVER: "rabbitmq:5672"
      OCR_INPUT_QUEUE: "ocr-in"
      OCR_OUTPUT_QUEUE: "ocr-out"
      FILES_SERVER: "files:3001"
      MONGO_SERVER: "mongodb://mongo:27017/m2p"
      RMQ_API: "rabbitmq:15672"
    restart: unless-stopped
  files:
    build: 
      context: https://github.com/easytopic-project/node-files-microservice.git
      network: "host"
    image: maxjf1/node-files-microservice:latest
    ports:
      - 3001:3001
    volumes:
      - ./temp/files:/files
    environment:
      PORT: 3001
    restart: unless-stopped
  ocr:
    build: 
      context: https://github.com/maxjf1/node-ocr-server.git
      network: "host"
    image: maxjf1/node-ocr-server:latest
    depends_on:
      - rabbitmq
    volumes:
      - ./temp/ocr:/temp
    environment:
      QUEUE_SERVER: "rabbitmq:5672"
      FILES_SERVER: "files:3001"
      INPUT_QUEUE_NAME: "ocr-in"
      OUTPUT_QUEUE_NAME: "ocr-out"
    restart: unless-stopped
  ocr-test:
    build: 
      context: https://github.com/maxjf1/node-ocr-server.git
      network: "host"
    image: maxjf1/node-ocr-server:latest
    depends_on:
      - rabbitmq
    volumes:
      - ./temp/ocr-test:/temp
    environment:
      QUEUE_SERVER: "rabbitmq:5672"
      FILES_SERVER: "files:3001"
      INPUT_QUEUE_NAME: "ocr-in-test"
      OUTPUT_QUEUE_NAME: "ocr-out-test"
    restart: unless-stopped
  worker-audio_extractor:
    build: 
      context: https://github.com/easytopic-project/audio-extractor.git
      network: "host"
    depends_on:
      - rabbitmq
    environment:
      QUEUE_SERVER: "rabbitmq:5672"
      FILES_SERVER: "files:3001"
      INPUT_QUEUE_NAME: "audio_extractor_in"
      OUTPUT_QUEUE_NAME: "audio_extractor_out"
    restart: unless-stopped
  worker-vad:
    build: 
      context: https://github.com/easytopic-project/voice-activity-detector.git
      network: "host"
    depends_on:
      - rabbitmq
    environment:
      QUEUE_SERVER: "rabbitmq:5672"
      FILES_SERVER: "files:3001"
      INPUT_QUEUE_NAME: "vad_in"
      OUTPUT_QUEUE_NAME: "vad_out"
    restart: unless-stopped
  asr-server:
    build: 
      context: https://github.com/easytopic-project/asr-server.git
      network: "host"
    volumes:
      - /media/kaldi_models:/opt/test/models
      - ./sample_english_nnet2.yaml:/opt/test/models/sample_english_nnet2.yaml
    ports:
      - "9999:80"
    restart: unless-stopped
  worker-asr:
    build: 
      context: https://github.com/easytopic-project/automatic-speech-recognition.git
      network: "host"
    depends_on:
      - rabbitmq
      - asr-server
    environment:
      QUEUE_SERVER: "rabbitmq:5672"
      FILES_SERVER: "files:3001"
      INPUT_QUEUE_NAME: "asr_in"
      OUTPUT_QUEUE_NAME: "asr_out"
      ASR_SERVER: "asr-server"
      GSTREAM_PORT: 80
    restart: unless-stopped
  worker-low-level-features:
    build: 
      context: https://github.com/easytopic-project/low-level-features.git
      network: "host"
    depends_on:
      - rabbitmq
    environment:
      QUEUE_SERVER: "rabbitmq:5672"
      FILES_SERVER: "files:3001"
      INPUT_QUEUE_NAME: "low_level_in"
      OUTPUT_QUEUE_NAME: "low_level_out"
    restart: unless-stopped
  worker-topic-segmentation:
    build: 
      context: https://github.com/easytopic-project/topic-segmentation.git
      network: "host"
    depends_on:
      - rabbitmq
    environment:
      QUEUE_SERVER: "rabbitmq:5672"
      FILES_SERVER: "files:3001"
      INPUT_QUEUE_NAME: "topic_segmentation_in"
      OUTPUT_QUEUE_NAME: "topic_segmentation_out"
    volumes:
      - /media/word2vec:/word2vec
    restart: unless-stopped
  rabbitmq:
    image: rabbitmq:3-management
    # command: rabbitmq-plugins enable rabbitmq_event_exchange
    ports:
      - "4369:4369"
      - "3002:5672"
      - "25672:25672"
      - "3003:15672"
    volumes:
      - ./temp/rabbitmq:/var/lib/rabbitmq/mnesia/
      - ./enabled_plugins:/etc/rabbitmq/enabled_plugins
      - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    restart: unless-stopped
  mongo:
    image: mongo:4
    ports:
      - '3005:27017'
    restart: unless-stopped
